# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2017-01-01 23:38
from __future__ import unicode_literals

import betterself.users.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# supplements.migrations.0002_data_migration_for_measurement_units

class Migration(migrations.Migration):

    replaces = [('supplements', '0001_initial'), ('supplements', '0002_data_migration_for_measurement_units'), ('supplements', '0003_auto_20160724_1751'), ('supplements', '0004_auto_20160727_0400'), ('supplements', '0005_auto_20160730_1936'), ('supplements', '0006_auto_20160802_1205'), ('supplements', '0007_auto_20161215_0222'), ('supplements', '0008_auto_20161215_0223'), ('supplements', '0009_auto_20161215_0357'), ('supplements', '0010_auto_20161215_0359'), ('supplements', '0011_auto_20161224_2027'), ('supplements', '0012_auto_20161224_2028'), ('supplements', '0013_auto_20170101_2308'), ('supplements', '0014_auto_20170101_2335')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('vendors', '0001_initial'),
        ('users', '0004_user_uuid'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=300)),
                ('half_life_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IngredientComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('quantity', models.FloatField(default=1)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplements.Ingredient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_liquid', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupplementProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=300)),
                ('ingredient_composition', models.ManyToManyField(to='supplements.IngredientComposition')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vendors.Vendor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='ingredientcomposition',
            name='measurement_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='supplements.MeasurementUnit'),
        ),
        migrations.AddField(
            model_name='ingredientcomposition',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RenameModel(
            old_name='MeasurementUnit',
            new_name='Measurement',
        ),
        migrations.RenameModel(
            old_name='SupplementProduct',
            new_name='Supplement',
        ),
        migrations.RenameField(
            model_name='supplement',
            old_name='ingredient_composition',
            new_name='ingredient_compositions',
        ),
        migrations.RenameField(
            model_name='ingredientcomposition',
            old_name='measurement_unit',
            new_name='measurement',
        ),
        migrations.AlterField(
            model_name='ingredientcomposition',
            name='measurement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplements.Measurement'),
        ),
        migrations.AlterField(
            model_name='supplement',
            name='ingredient_compositions',
            field=models.ManyToManyField(blank=True, to='supplements.IngredientComposition'),
        ),
        migrations.AlterField(
            model_name='supplement',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendors.Vendor'),
        ),
        migrations.AlterUniqueTogether(
            name='ingredientcomposition',
            unique_together=set([('user', 'ingredient', 'measurement', 'quantity')]),
        ),
        migrations.AlterUniqueTogether(
            name='ingredient',
            unique_together=set([('name', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='supplement',
            unique_together=set([('user', 'name', 'vendor')]),
        ),
        migrations.AlterModelOptions(
            name='ingredientcomposition',
            options={'ordering': ['user', 'ingredient__name']},
        ),
        migrations.AlterModelOptions(
            name='supplement',
            options={'ordering': ['user', 'name']},
        ),
        migrations.AlterModelOptions(
            name='ingredientcomposition',
            options={'ordering': ['user', 'ingredient__name'], 'verbose_name': 'Ingredient Composition', 'verbose_name_plural': 'Ingredient Compositions'},
        ),
        migrations.AlterModelOptions(
            name='supplement',
            options={'ordering': ['user', 'name'], 'verbose_name': 'Supplement', 'verbose_name_plural': 'Supplements'},
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='user',
            field=models.ForeignKey(default=betterself.users.models.User.get_default_user_id, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='ingredientcomposition',
            name='user',
            field=models.ForeignKey(default=betterself.users.models.User.get_default_user_id, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='supplement',
            name='user',
            field=models.ForeignKey(default=betterself.users.models.User.get_default_user_id, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='ingredientcomposition',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='supplement',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='ingredientcomposition',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='measurement',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='supplement',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
    ]
